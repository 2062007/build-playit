name: build-and-release-playit

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-musleabihf

    steps:
      - name: Checkout playit source
        uses: actions/checkout@v4
        with:
          repository: playit-cloud/playit-agent
          submodules: recursive

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools pkg-config
          cargo install cargo-zigbuild --locked

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.11.0

      - name: Build (static-ish via musl)
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"
        run: |
          cargo zigbuild --release --target ${{ matrix.target }}
          echo "List files in build dir:"
          ls -l target/${{ matrix.target }}/release/
          BIN="playit-cli"
          BIN_PATH="target/${{ matrix.target }}/release/${BIN}"
          if [ ! -f "$BIN_PATH" ]; then
            echo "Không tìm thấy file playit-cli, kiểm tra file thực tế..."
            # Lấy file thực thi đầu tiên trong thư mục release, loại file .d và thư mục build
            BIN_FOUND="$(ls target/${{ matrix.target }}/release/ | grep -v '\.d$' | grep -v '^build$' | head -n1)"
            BIN_PATH="target/${{ matrix.target }}/release/${BIN_FOUND}"
            echo "Đã chọn file binary: $BIN_PATH"
          fi
          OUT="playit_cli-${{ matrix.target }}"
          cp "$BIN_PATH" "$OUT"
          llvm-strip "$OUT" || true
          chmod +x "$OUT"

      - name: Pack artifact
        run: |
          mkdir -p dist
          mv playit_cli-${{ matrix.target }} dist/
          cat > dist/README-${{ matrix.target }}.txt << 'EOF'
          Usage:
            chmod +x playit_cli-<target>
            ./playit_cli-<target>
          EOF

      - name: Upload artifact (per-target)
        uses: actions/upload-artifact@v4
        with:
          name: playit_cli-${{ matrix.target }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Compose install.sh (auto-detect arch & fetch latest)
        shell: bash
        run: |
          mkdir -p release
          cat > release/install.sh << 'EOF'
          #!/usr/bin/env bash
          set -e
          REPO="${REPO_OVERRIDE:-${GITHUB_REPOSITORY}}"

          arch="$(uname -m)"
          case "$arch" in
            x86_64)   target="x86_64-unknown-linux-musl" ;;
            i686|i386) target="i686-unknown-linux-musl" ;;
            aarch64|arm64) target="aarch64-unknown-linux-musl" ;;
            armv7l|armv7) target="armv7-unknown-linux-musleabihf" ;;
            *) echo "Unsupported arch: $arch"; exit 1 ;;
          esac

          url="https://github.com/${REPO}/releases/latest/download/playit_cli-${target}"
          echo "→ Downloading $url"
          curl -fL "$url" -o playit_cli
          chmod +x playit_cli
          echo "✓ Saved to ./playit_cli"
          ./playit_cli || true
          EOF
          chmod +x release/install.sh

      - name: Move binaries to release/
        run: |
          shopt -s globstar
          mkdir -p release
          mv artifacts/**/playit_cli-* release/ || true
          mv artifacts/**/README-* release/ || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/**
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
